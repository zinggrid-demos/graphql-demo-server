type GenericResponse {
  success: Boolean
}

type Level {
  id: Int!
  name: String
  rank: Int
  shows(
    limit: Int
    order: String

    """
    A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/
    """
    where: SequelizeJSON
    offset: Int
  ): [Show]
  users(
    limit: Int
    order: String

    """
    A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/
    """
    where: SequelizeJSON
    offset: Int
  ): [User]
}

type Mutation {
  createRating(userId: Int, showId: Int, rating: Float): Rating
  updateRating(id: Int, userId: Int, showId: Int, rating: Float): Rating
  deleteRating(id: Int!): GenericResponse
  createLevel(name: String, rank: Int): Level
  updateLevel(id: Int, name: String, rank: Int): Level
  deleteLevel(id: Int!): GenericResponse
  createShow(title: String, seasons: Int, provider: String, genre: String, levelId: Int): Show
  updateShow(id: Int, title: String, seasons: Int, provider: String, genre: String, levelId: Int): Show
  deleteShow(id: Int!): GenericResponse
  createUser(username: String!, password: String, admin: Int, levelId: Int): User
  updateUser(id: Int, username: String, password: String, admin: Int, levelId: Int): User
  deleteUser(id: Int!): GenericResponse
}

type Query {
  ratings(
    limit: Int
    order: String

    """
    A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/
    """
    where: SequelizeJSON
    offset: Int
  ): [Rating]
  rating(
    id: Int

    """
    A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/
    """
    where: SequelizeJSON
  ): Rating
  levels(
    limit: Int
    order: String

    """
    A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/
    """
    where: SequelizeJSON
    offset: Int
  ): [Level]
  level(
    id: Int

    """
    A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/
    """
    where: SequelizeJSON
  ): Level
  shows(
    limit: Int
    order: String

    """
    A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/
    """
    where: SequelizeJSON
    offset: Int
  ): [Show]
  show(
    id: Int

    """
    A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/
    """
    where: SequelizeJSON
  ): Show
  users(
    limit: Int
    order: String

    """
    A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/
    """
    where: SequelizeJSON
    offset: Int
  ): [User]
  user(
    id: Int

    """
    A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/
    """
    where: SequelizeJSON
  ): User
}

type Rating {
  id: Int!
  userId: Int
  showId: Int
  rating: Float
  user: User
  show: Show
}

"""The `JSON` scalar type represents raw JSON as values."""
scalar SequelizeJSON

type Show {
  id: Int!
  title: String
  seasons: Int
  provider: String
  genre: String
  levelId: Int
  ratings(
    limit: Int
    order: String

    """
    A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/
    """
    where: SequelizeJSON
    offset: Int
  ): [Rating]
  level: Level
}

type User {
  id: Int!
  username: String!
  password: String
  admin: Int
  levelId: Int
  ratings(
    limit: Int
    order: String

    """
    A JSON object conforming the the shape specified in http://docs.sequelizejs.com/en/latest/docs/querying/
    """
    where: SequelizeJSON
    offset: Int
  ): [Rating]
  level: Level
}
